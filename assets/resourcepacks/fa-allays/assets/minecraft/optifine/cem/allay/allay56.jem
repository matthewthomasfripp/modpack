{
	"credit": "Created by FreshLX for Fresh_Animations",
	"texture": "optifine/random/entity/allay/sephiroth.png",
	"textureSize": [128, 128],
	"models": [
		{
			"part": "head",
			"id": "head",
			"invertAxis": "xy",
			"translate": [0, -6, 0],
			"submodels": [
				{
					"id": "Created_by_FreshLX_for_Fresh_Animations",
					"invertAxis": "xy",
					"translate": [0, 0, 0]
				}
			],
			"animations": [
				{
					"var.testing": "0",
					"var.r": "random(id)*pi*4",
					"var.b": "var.r+age/27*pi",
					"var.c": "age*8*(pi/180)",
					"var.hurt": "-sin(hurt_time/2)*hurt_time/10 -cos(death_time/6)*clamp(death_time/2, 0, 1)",
					"var.wings": "var.r+(limb_swing*1.5+age/5*pi +pos_y*1.5)",
					"var.hold": "0.5-0.5*cos( clamp(-right_arm.rx, 0, 1)*pi )",
					"var.danceA": "clamp(if(head.rz!=0 || between(sin(var.r+age/260), -0.15, 0.15)                                                                                           , min(20, var.danceA +0.03 *frame_time*20), max(0, var.danceA -0.03 *frame_time*20)), 0, 1)",
					"var.danceC": "clamp(if(head.rz!=0 || between(sin(var.r+age/260), -0.15, 0.15) || !(between(torad(head_pitch), torad(-5), torad(5))) && between(sin(var.r+age/100), 0, 1), min(20, var.danceC +0.5  *frame_time*20), max(0, var.danceC -0.5  *frame_time*20)), 0, 1)",
					"var.danceB": "clamp(var.danceC-var.hurt, 0, 1)"
				},
				{
					"head2.rx": "torad(head_pitch)/2 -sin(var.b-pi/2)/20 -torad(2.5) -torad(30)*limb_speed +torad( 30 +30*sin(limb_swing/1.5) )*var.hurt",
					"head2.ry": "torad(head_yaw)/1.6 +(-sin(       var.c +sin(var.c*2)/4 )*torad(34) )*var.danceA        +sin(limb_swing/2.5)  *var.hurt",
					"head2.rz": "-sin(var.b/3)/16    +(-sin(-pi/4 +var.c                 )*torad(14) )*var.danceA",
					"head2.ty": "-6.1 -limb_speed/2             *(1-0.8*var.danceA)*(1-var.hurt)            +clamp((-0.5 -sin(limb_swing/2)/2 )*var.hurt, 0, 1)",
					"head2.tz": "     -limb_speed*1.1           *(1-0.8*var.danceA)*(1-var.hurt)",
					"body.rx": "torad(2.5) +torad(30)*limb_speed*(1-0.8*var.danceA)*(1-var.hurt) +sin(var.b-pi/2)/20 +torad(head_pitch)/4 +clamp( if(!is_riding && age>10, -(pos_y-var.y), 0), -pi/3, pi/4) +torad( -40 )*var.hurt",
					"body.ry": "torad(head_yaw)/5          +( sin(       var.c +sin(var.c*2)/4 )*torad(20) )  *var.danceA +torad( 20*cos(limb_swing/3) )*var.hurt",
					"body.rz": "      sin(var.b/3     )/16 +( sin(       var.c                 )*torad(20) )  *var.danceA      -( sin(limb_swing/2) )/22*var.hurt",
					"body.tx": "      sin(var.b/3-pi/2)/2  +(-cos(       var.c                 )*torad(16) )*8*var.danceA",
					"body.ty": "-4 +sin(var.b  -pi/2)*sin(var.b/2.5)*(1-var.danceA) +( sin(pi/6 +var.c*2 -cos(pi/6 +var.c*2)/3) )*3*var.danceA +18*var.testing",
					"body.tz": " -sin(var.r+age/100*pi)/4",
					"render.leash_offset_x": " ( body.tx -(cos(var.c)*16*(pi/180)))/16",
					"render.leash_offset_y": "-( body.ty + cos(age*9*(pi/180))*0.25*(1-min(limb_swing/0.3, 1)) -0.5 )/16",
					"render.leash_offset_z": "-( body.tz )/16",
					"back_hair.rx": "body.rx"
				},
				{
					"right_arm.rx": "                                          (-sin(var.b    +torad(60) )/20 -body.rx                  +torad( 50)*limb_speed +if(is_riding, torad(- 5), 0 ) +torad(head_yaw)/4 )*(1-var.hold)    +( -1         )*var.hold +torad( sin(limb_swing/1.7)*30 -30 )*var.hurt",
					"left_arm.rx": "                                           (-sin(var.b    +torad(60) )/20 -body.rx                  +torad( 50)*limb_speed +if(is_riding, torad(- 5), 0 ) -torad(head_yaw)/4 )*(1-var.hold)    +( -1         )*var.hold +torad( sin(limb_swing/2  )*30 -30 )*var.hurt",
					"right_arm.ry": "  torad( 15)                             +( sin(var.b    +torad(60) )/20 -body.ry*(1-var.danceA*2) +torad(-10)*limb_speed +if(is_riding, torad(-10), 0 )                    )*(1-var.hold)    +( -torad( 5) )*var.hold",
					"left_arm.ry": "   torad(-15)                             +(-sin(var.b    +torad(60) )/20 -body.ry*(1-var.danceA*2) +torad( 10)*limb_speed +if(is_riding, torad( 10), 0 )                    )*(1-var.hold)    +(  torad( 5) )*var.hold",
					"right_arm.rz": "-(torad(-40*(1-limb_speed*(1-var.hold))) +(-sin(var.b +cos(var.b)/1.5)/6 -body.rz                  +torad(-10)*limb_speed +if(is_riding, torad( 20), 0 )                    )*(1-var.hold))/2 +( -torad(10) )*var.hold +( sin(-pi/4 +var.c )*torad(16) )*var.danceA",
					"left_arm.rz": " -(torad( 40*(1-limb_speed*(1-var.hold))) +( sin(var.b +cos(var.b)/1.5)/6 -body.rz                  +torad( 10)*limb_speed +if(is_riding, torad(-20), 0 )                    )*(1-var.hold))/2 +(  torad(10) )*var.hold +( sin(-pi/4 +var.c )*torad(16) )*var.danceA",
					"right_arm.tx": "-2  +body.tx*(var.testing) +(  0.2 )*limb_speed       +(  0.15 )*var.hold +if(is_riding,  0.15*(1-var.hold), 0)",
					"left_arm.tx": "  2  +body.tx*(var.testing) +( -0.2 )*limb_speed       +( -0.15 )*var.hold +if(is_riding, -0.15*(1-var.hold), 0)",
					"right_arm.ty": "0.6 +body.ty*(var.testing) -sin(var.b)/8*(1-var.hold) +(  0.5  )*var.hold +( sin(-pi/4 +var.c )*torad(16)/2 )  *var.danceA",
					"left_arm.ty": " 0.6 +body.ty*(var.testing) -sin(var.b)/8*(1-var.hold) +(  0.5  )*var.hold -( sin(-pi/4 +var.c )*torad(16)/2 )  *var.danceA",
					"right_arm.tz": "0.2                                                   +( -0.5  )*var.hold +(body.ry*2)*var.danceA",
					"left_arm.tz": " 0.2                                                   +( -0.5  )*var.hold -(body.ry*2)*var.danceA"
				},
				{
					"right_wing2.rz": "(-cos(var.wings)/3)*(1-var.danceA) +( sin(pi/4+var.c*2  )*torad(10) )*var.danceA",
					"left_wing2.rz": "-right_wing2.rz",
					"right_wing2.ry": "-pi/2 +torad(50) -sin(var.wings +cos(var.wings)/2*clamp(2-limb_speed*4, 0, 1))/2*(1-var.danceA) +torad(8.8)*clamp(1+limb_speed, 0, 1.2) +( -torad(15) +cos(var.c*2 -cos(pi/4+var.c*2)*1.5 )*torad(40) )*var.danceA",
					"left_wing2.ry": "-right_wing2.ry",
					"right_wing2.rx": "(torad(15) -sin(var.wings)/6*clamp(1-limb_speed*2, 0, 1))*(1-var.danceA) +( cos(var.c*2 +sin(var.c*2) )*torad(25) +torad(15) )*var.danceA",
					"left_wing2.rx": "right_wing2.rx",
					"right_wing2.tx": "(-0.85 -sin(pi/3+var.wings)/3 )*(1-var.danceA) -( 0.5 )*var.danceA",
					"left_wing2.tx": "                 -right_wing2.tx*(1-var.danceA) +( 0.5 )*var.danceA"
				},
				{
					"right_eye.sz": "if(between(player_pos_x-pos_x, -30, 30)&&between(player_pos_y-pos_y, -30, 30)&&between(player_pos_z-pos_z, -30, 30), 1, 2)",
					"left_eye.sz": "right_eye.sz",
					"right_eye.sx": "1 +clamp( (1 -abs(sin(var.r+age/7)*6))*clamp(-32 +cos((var.r+age/7)/1.5)*40 +cos((var.r+age/7)/4)*40, 0, 1), clamp(var.hurt*3 +death_time, 0, 1), 1 )/2*(1-var.danceB) +clamp(25 +sin(var.r +age/47)*40, 0, 1)/2*var.danceB",
					"left_eye.sx": "right_eye.sx",
					"right_eye.sy": "1 -clamp(1.5 -abs(sin(var.r+age/7)*6), clamp(var.hurt*3 +death_time, 0, 1), 1)*clamp(-32 +cos((var.r+age/7)/1.5)*40 +cos((var.r+age/7)/4)*40, clamp(var.hurt*3 +death_time, 0, 0.9), 0.9)*(1-var.danceB) -clamp(25 +sin(var.r +age/47)*40, 0, 0.7)*var.danceB",
					"left_eye.sy": "right_eye.sy",
					"right_eye.tx": "-0.5 +clamp( sin(var.r+age/4)/5, -0.1, 0.1)/2*clamp(-28 -cos(var.r+age/85)*30, 0, 1)*clamp(118 -sin(var.r+age/147)*120, 0, 1) +clamp(-torad(head_yaw)/8, -0.2, 0.2 )",
					"left_eye.tx": "right_eye.tx +1",
					"right_eye.ty": "-0.9 +(-clamp(-8 +sin(var.r +age/47)*40, 0, 0.7) )/2.5*var.danceB +0.5*clamp(var.hurt*3 +death_time, 0, 1)",
					"left_eye.ty": "right_eye.ty",
					"right_eye.tz": "-2.5 +if( right_eye.sy<=0.31, 0.2, 0 )*var.danceB",
					"left_eye.tz": "right_eye.tz",
					"eyes.tz": "-2.5 +if( right_eye.sy>0.31, 0.2, 0 )*var.danceB +0.2*(1-var.danceB)",
					"right_eye.visible": "right_eye.tz==-2.5",
					"left_eye.visible": "  left_eye.tz==-2.5",
					"eyes.visible": "eyes.tz==-2.5"
				},
				{
					"right_leg.rx": "torad(45)*limb_speed-sin(age/20*pi)/4-(head_pitch/57.5)/3+if(is_riding,torad(45),0)",
					"right_leg.ry": "torad(15)+(head_yaw/57.5)/2",
					"right_leg.rz": "sin(age/60*pi-torad(90))/10",
					"left_leg.rx": "-torad(45)*limb_speed-sin(age/20*pi)/4-(head_pitch/567.5)/3+if(is_riding,torad(45),0)",
					"left_leg.ry": "torad(-15)+(head_yaw/57.5)/2",
					"left_leg.rz": "sin(age/60*pi-torad(90))/10"
				},
				{
					"var.y": "var.y2",
					"var.y2": "var.y3",
					"var.y3": "var.y4",
					"var.y4": "var.y5",
					"var.y5": "var.y6",
					"var.y6": "pos_y"
				}
			]
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, -6, 0],
			"boxes": [
				{
					"coordinates": [-1.5, 3, -1, 3, 3, 2],
					"uvNorth": [8, 48, 20, 60],
					"uvEast": [0, 48, 8, 60],
					"uvSouth": [28, 48, 40, 60],
					"uvWest": [20, 48, 28, 60],
					"uvUp": [20, 48, 8, 40],
					"uvDown": [32, 40, 20, 48]
				}
			],
			"submodels": [
				{
					"id": "right_leg",
					"invertAxis": "xy",
					"translate": [1, 3, 0],
					"boxes": [
						{
							"coordinates": [-0.5, -2, -1, 1, 2, 2],
							"uvNorth": [44, 64, 40, 72],
							"uvEast": [52, 64, 44, 72],
							"uvSouth": [56, 64, 52, 72],
							"uvWest": [40, 64, 32, 72],
							"uvUp": [40, 64, 44, 56],
							"uvDown": [44, 56, 48, 64]
						}
					]
				},
				{
					"id": "left_leg",
					"invertAxis": "xy",
					"mirrorTexture": "u",
					"translate": [-1, 3, 0],
					"boxes": [
						{
							"coordinates": [-0.5, -2, -1, 1, 2, 2],
							"uvNorth": [40, 64, 44, 72],
							"uvEast": [32, 64, 40, 72],
							"uvSouth": [52, 64, 56, 72],
							"uvWest": [44, 64, 52, 72],
							"uvUp": [44, 64, 40, 56],
							"uvDown": [48, 56, 44, 64]
						}
					]
				},
				{
					"id": "head2",
					"invertAxis": "xy",
					"translate": [0, 6, 0],
					"boxes": [
						{
							"coordinates": [-2.5, 0, -2.5, 5, 5, 5],
							"uvNorth": [20, 20, 40, 40],
							"uvEast": [0, 20, 20, 40],
							"uvSouth": [60, 20, 80, 40],
							"uvWest": [40, 20, 60, 40],
							"uvUp": [40, 20, 20, 0],
							"uvDown": [60, 0, 40, 20]
						},
						{
							"coordinates": [-2.5, 0, -2.5, 5, 5, 5],
							"uvNorth": [20, 108, 40, 128],
							"uvEast": [0, 108, 20, 128],
							"uvSouth": [60, 108, 80, 128],
							"uvWest": [40, 108, 60, 128],
							"uvUp": [40, 108, 20, 88],
							"uvDown": [60, 88, 40, 108],
							"sizeAdd": 0.25
						}
					],
					"submodels": [
						{
							"id": "left_eye",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [-0.5, 0.9, -2.5],
							"boxes": [
								{
									"coordinates": [-2, 0.1, -0.05, 2, 1, 0.05],
									"uvNorth": [52, 44, 44, 48],
									"uvEast": [52, 44, 51, 48],
									"uvSouth": [44, 44, 52, 48],
									"uvWest": [45, 44, 44, 48],
									"uvUp": [44, 44, 52, 45],
									"uvDown": [44, 48, 52, 47]
								}
							]
						},
						{
							"id": "right_eye",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0.5, 0.9, -2.5],
							"boxes": [
								{
									"coordinates": [0, 0.1, -0.05, 2, 1, 0.05],
									"uvNorth": [40, 44, 32, 48],
									"uvEast": [40, 44, 39, 48],
									"uvSouth": [32, 44, 40, 48],
									"uvWest": [33, 44, 32, 48],
									"uvUp": [32, 44, 40, 45],
									"uvDown": [32, 48, 40, 47]
								}
							]
						},
						{
							"id": "eyes",
							"invertAxis": "xy",
							"translate": [0, 0.9, -2.5],
							"boxes": [
								{
									"coordinates": [-2.125, -0.1, -0.05, 4.25, 1.2, 0],
									"uvNorth": [52, 40, 80, 48]
								}
							]
						},
						{
							"id": "back_hair",
							"invertAxis": "xy",
							"translate": [0, 0, 2.5],
							"boxes": [
								{
									"coordinates": [-2.5, -4, 0, 5, 4, 0],
									"uvNorth": [0, 72, 20, 88],
									"uvEast": [0, 72, 0, 88],
									"uvSouth": [20, 72, 40, 88],
									"uvWest": [20, 72, 20, 88],
									"uvUp": [20, 72, 0, 72],
									"uvDown": [40, 72, 20, 72]
								}
							]
						}
					]
				},
				{
					"id": "left_wing2",
					"invertAxis": "xy",
					"translate": [-0.5, 5, 1],
					"submodels": [
						{
							"id": "left_wing3",
							"invertAxis": "xy",
							"translate": [0, 0, 0]
						}
					]
				},
				{
					"id": "right_wing2",
					"invertAxis": "xy",
					"translate": [0.5, 5, 1],
					"submodels": [
						{
							"id": "right_wing3",
							"invertAxis": "xy",
							"translate": [0, 0, 0],
							"boxes": [
								{
									"coordinates": [0, -1, 1, 0, 10, 9],
									"uvNorth": [92, 48, 92, 88],
									"uvEast": [56, 48, 92, 88],
									"uvSouth": [128, 48, 128, 88],
									"uvWest": [92, 48, 128, 88],
									"uvUp": [92, 48, 92, 12],
									"uvDown": [92, 12, 92, 48]
								},
								{
									"coordinates": [0, -6, 2, 0, 5, 8],
									"uvNorth": [92, 88, 92, 108],
									"uvEast": [60, 88, 92, 108],
									"uvSouth": [124, 88, 124, 108],
									"uvWest": [92, 88, 124, 108],
									"uvUp": [92, 88, 92, 56],
									"uvDown": [92, 56, 92, 88]
								},
								{
									"coordinates": [0, -3, 0, 0, 4, 2],
									"uvNorth": [8, 0, 8, 16],
									"uvEast": [0, 0, 8, 16],
									"uvSouth": [16, 0, 16, 16],
									"uvWest": [8, 0, 16, 16],
									"uvUp": [8, 0, 8, -8],
									"uvDown": [8, -8, 8, 0]
								}
							]
						}
					]
				}
			]
		},
		{
			"part": "right_arm",
			"id": "right_arm",
			"invertAxis": "xy",
			"mirrorTexture": "u",
			"translate": [-1.75, -5.5, 0],
			"boxes": [
				{
					"coordinates": [1.5, 2, -1, 1, 4, 2],
					"uvNorth": [88, 32, 92, 48],
					"uvEast": [80, 32, 88, 48],
					"uvSouth": [100, 32, 104, 48],
					"uvWest": [92, 32, 100, 48],
					"uvUp": [92, 32, 88, 24],
					"uvDown": [96, 24, 92, 32]
				},
				{
					"coordinates": [1.5, 2, -1, 1, 4, 2],
					"uvNorth": [112, 32, 116, 48],
					"uvEast": [104, 32, 112, 48],
					"uvSouth": [124, 32, 128, 48],
					"uvWest": [116, 32, 124, 48],
					"uvUp": [116, 32, 112, 24],
					"uvDown": [120, 24, 116, 32],
					"sizeAdd": 0.1
				}
			]
		},
		{
			"part": "left_arm",
			"id": "left_arm",
			"invertAxis": "xy",
			"mirrorTexture": "u",
			"translate": [1.75, -5.5, 0],
			"boxes": [
				{
					"coordinates": [-2.5, 2, -1, 1, 4, 2],
					"uvNorth": [88, 8, 92, 24],
					"uvEast": [80, 8, 88, 24],
					"uvSouth": [100, 8, 104, 24],
					"uvWest": [92, 8, 100, 24],
					"uvUp": [92, 8, 88, 0],
					"uvDown": [96, 0, 92, 8]
				},
				{
					"coordinates": [-2.5, 2, -1, 1, 4, 2],
					"uvNorth": [112, 8, 116, 24],
					"uvEast": [104, 8, 112, 24],
					"uvSouth": [124, 8, 128, 24],
					"uvWest": [116, 8, 124, 24],
					"uvUp": [116, 8, 112, 0],
					"uvDown": [120, 0, 116, 8],
					"sizeAdd": 0.1
				}
			]
		},
		{
			"part": "left_wing",
			"id": "left_wing",
			"invertAxis": "xy",
			"translate": [0.5, -6, -1]
		},
		{
			"part": "right_wing",
			"id": "right_wing",
			"invertAxis": "xy",
			"translate": [-0.5, -6, -2],
			"animations": [
				{
					"right_wing.rx": "torad(-5)"
				}
			]
		}
	]
}