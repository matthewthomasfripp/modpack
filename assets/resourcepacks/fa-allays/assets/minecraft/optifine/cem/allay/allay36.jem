{
	"credit": "Made with Blockbench",
	"texture": "optifine/random/entity/allay/knight_morpho_knight.png",
	"textureSize": [64, 64],
	"models": [
		{
			"part": "head",
			"id": "head",
			"invertAxis": "xy",
			"translate": [0, -6, 0],
			"animations": [
				{
					"var.testing": "0",
					"var.r": "random(id)*pi*4",
					"var.b": "var.r+age/27*pi",
					"var.c": "age*8*(pi/180)",
					"var.hurt": "-sin(hurt_time/2)*hurt_time/10",
					"var.wings": "var.r+limb_swing*1.5+age/5*pi +pos_y*1.5",
					"var.hold": "(0.5-0.5*cos( clamp(-right_arm.rx, 0, 1)*pi ))",
					"var.danceA": "clamp(if(head.rz!=0 || between(sin(var.r+age/260), -0.15, 0.15)                                                                                         , min(20, var.danceA +0.03 *frame_time*20), max(0, var.danceA -0.03 *frame_time*20)), 0, 1)",
					"var.danceB": "clamp(if(head.rz!=0 || between(sin(var.r+age/260), -0.15, 0.15) || !between(torad(head_pitch), torad(-5), torad(5)) && between(sin(var.r+age/100), 0, 1), min(20, var.danceB +0.5  *frame_time*20), max(0, var.danceB -0.5  *frame_time*20)), 0, 1)"
				},
				{
					"head2.rx": "torad(head_pitch)/2 -sin(var.b-pi/2)/20 -torad(2.5) -torad(30)*limb_speed +torad( 30 +30*sin(limb_swing/1.5) )*var.hurt",
					"head2.ry": "torad(head_yaw)/1.6 +(-sin(       var.c +sin(var.c*2)/4 )*torad(34) )*var.danceA        +sin(limb_swing/2.5)  *var.hurt",
					"head2.rz": "-sin(var.b/3)/16    +(-sin(-pi/4 +var.c                 )*torad(14) )*var.danceA",
					"head2.ty": "-6.1 -limb_speed/2   *(1-0.8*var.danceA)*(1-var.hurt)                            +(-0.5 -sin(limb_swing/2)/2 )*var.hurt",
					"head2.tz": "     -limb_speed*1.1 *(1-0.8*var.danceA)*(1-var.hurt)",
					"body.rx": "torad(2.5) +torad(30)*limb_speed*(1-0.8*var.danceA)*(1-var.hurt) +sin(var.b-pi/2)/20 +torad(head_pitch)/4 +clamp( if(!is_riding && age>10, -(pos_y-var.y), 0), -pi/3, pi/4) +torad( -40 )*var.hurt",
					"body.ry": "torad(head_yaw)/5          +( sin(       var.c +sin(var.c*2)/4 )*torad(20) )  *var.danceA +torad( 20*cos(limb_swing/3) )*var.hurt",
					"body.rz": "      sin(var.b/3     )/16 +( sin(       var.c                 )*torad(20) )  *var.danceA      -( sin(limb_swing/2) )/22*var.hurt",
					"body.tx": "      sin(var.b/3-pi/2)/2  +(-cos(       var.c                 )*torad(16) )*8*var.danceA",
					"body.ty": "1 +sin(var.b  -pi/2)*sin(var.b/2.5)*(1-var.danceA) +( sin(pi/6 +var.c*2 -cos(pi/6 +var.c*2)/3) )*3*var.danceA +18*var.testing",
					"body.tz": " -sin(var.r+age/100*pi)/4",
					"render.leash_offset_x": " ( body.tx -(cos(var.c)*16*(pi/180)))/16",
					"render.leash_offset_y": "-( body.ty + cos(age*9*(pi/180))*0.25*(1-min(limb_swing/0.3, 1)) -0.5 )/16",
					"render.leash_offset_z": "-( body.tz )/16"
				},
				{
					"right_arm2.rx": "              (-sin(var.b    +torad(60) )/20 -body.rx                  +torad( 50)*limb_speed +if(is_riding, torad(-45), 0 ) +torad(head_yaw)/4 )*(1-var.hold)    +( -1         )*var.hold +torad( sin(limb_swing/1.7)*30 -30 )*var.hurt",
					"left_arm2.rx": "               (-sin(var.b    +torad(60) )/20 -body.rx                  +torad( 50)*limb_speed +if(is_riding, torad(-45), 0 ) -torad(head_yaw)/4 )*(1-var.hold)    +( -1         )*var.hold +torad( sin(limb_swing/2  )*30 -30 )*var.hurt",
					"right_arm2.ry": "  torad( 15) +( sin(var.b    +torad(60) )/20 -body.ry*(1-var.danceA*2) +torad(-10)*limb_speed                                                   )*(1-var.hold)    +( -torad( 5) )*var.hold",
					"left_arm2.ry": "   torad(-15) +(-sin(var.b    +torad(60) )/20 -body.ry*(1-var.danceA*2) +torad( 10)*limb_speed                                                   )*(1-var.hold)    +(  torad( 5) )*var.hold",
					"right_arm2.rz": "-(torad(-40) +(-sin(var.b +cos(var.b)/1.5)/6 -body.rz                  +torad(-10)*limb_speed                                                   )*(1-var.hold))/2 +( -torad(10) )*var.hold +( sin(-pi/4 +var.c )*torad(16) )*var.danceA",
					"left_arm2.rz": " -(torad( 40) +( sin(var.b +cos(var.b)/1.5)/6 -body.rz                  +torad( 10)*limb_speed                                                   )*(1-var.hold))/2 +(  torad(10) )*var.hold +( sin(-pi/4 +var.c )*torad(16) )*var.danceA",
					"right_arm2.tx": "-3.5  +body.tx*(var.testing)                            +(  0.15 )*var.hold",
					"left_arm2.tx": "  3.5  +body.tx*(var.testing)                            +( -0.15 )*var.hold",
					"right_arm2.ty": "0 +body.ty*(var.testing) -sin(var.b)/8*(1-var.hold) +(  0.5  )*var.hold +if(is_riding,  0.5, 0) +( sin(-pi/4 +var.c )*torad(16)/2 )  *var.danceA",
					"left_arm2.ty": " 0 +body.ty*(var.testing) -sin(var.b)/8*(1-var.hold) +(  0.5  )*var.hold +if(is_riding,  0.5, 0) -( sin(-pi/4 +var.c )*torad(16)/2 )  *var.danceA",
					"right_arm2.tz": "0.2                                                   +( -0.5  )*var.hold +if(is_riding, -0.5, 0) +(body.ry*2)*var.danceA",
					"left_arm2.tz": " 0.2                                                   +( -0.5  )*var.hold +if(is_riding, -0.5, 0) -(body.ry*2)*var.danceA"
				},
				{
					"knight_wing_right2.rz": "(-cos(var.wings)/3)*(1-var.danceA) +( sin(pi/4+var.c*2  )*torad(10) )*var.danceA",
					"knight_wing_left2.rz": "-knight_wing_right2.rz",
					"knight_wing_right.ry": "torad(90)+-pi/2 +torad(50) -sin(var.wings +cos(var.wings)/2*clamp(2-limb_speed*4, 0, 1))/2*(1-var.danceA) +torad(8.8)*clamp(1+limb_speed, 0, 1.2) +( -torad(15) +cos(var.c*2 -cos(pi/4+var.c*2)*1.5 )*torad(40) )*var.danceA",
					"knight_wing_left.ry": "-knight_wing_right.ry",
					"knight_wing_right.rx": "(torad(15) -sin(var.wings)/6*clamp(1-limb_speed*2, 0, 1))*(1-var.danceA) +( cos(var.c*2 +sin(var.c*2) )*torad(25) +torad(15) )*var.danceA",
					"knight_wing_left.rx": "knight_wing_right.rx",
					"knight_wing_right.tx": "(-0.85 -sin(pi/3+var.wings)/3 )*(1-var.danceA) -( 0.5 )*var.danceA",
					"knight_wing_left.tx": "                 -knight_wing_right.tx*(1-var.danceA) +( 0.5 )*var.danceA"
				},
				{
					"right_eye.sz": "if(between(player_pos_x-pos_x, -30, 30)&&between(player_pos_y-pos_y, -30, 30)&&between(player_pos_z-pos_z, -30, 30), 1, 2)",
					"left_eye.sz": "right_eye.sz",
					"right_eye.sx": "1 +clamp((1 -abs(sin(var.r+age/7)*6))*clamp(-32 +cos((var.r+age/7)/1.5)*40 +cos((var.r+age/7)/4)*40, 0, 1), 0, 1)/2*(1-var.danceB) +clamp(25 +sin(var.r +age/47)*40, 0, 1)/2*var.danceB",
					"left_eye.sx": "right_eye.sx",
					"right_eye.sy": "1 -clamp(1.5 -abs(sin(var.r+age/7)*6), 0, 1)*clamp(-32 +cos((var.r+age/7)/1.5)*40 +cos((var.r+age/7)/4)*40, 0, 0.9)*(1-var.danceB) -clamp(25 +sin(var.r +age/47)*40, 0, 0.7)*var.danceB",
					"left_eye.sy": "right_eye.sy",
					"right_eye.tx": "-1 +clamp( sin(var.r+age/4)/5, -0.1, 0.1)/2*clamp(-28 -cos(var.r+age/85)*30, 0, 1)*clamp(118 -sin(var.r+age/147)*120, 0, 1) +clamp(-torad(head_yaw)/8, -0.2, 0.2 )",
					"left_eye.tx": "  1 +clamp( sin(var.r+age/4)/5, -0.1, 0.1)/2*clamp(-28 -cos(var.r+age/85)*30, 0, 1)*clamp(118 -sin(var.r+age/147)*120, 0, 1) +clamp(-torad(head_yaw)/8, -0.2, 0.2 )",
					"right_eye.ty": "-3.5 +(-clamp(-8 +sin(var.r +age/47)*40, 0, 0.7) )/2.5*var.danceB",
					"left_eye.ty": "right_eye.ty",
					"right_eye.tz": "-3.85 +if( right_eye.sy<=0.31, 0.2, 0 )*var.danceB",
					"left_eye.tz": "right_eye.tz",
					"eyes.tz": "-3.85 +if( right_eye.sy>0.31, 0.2, 0 )*var.danceB +0.2*(1-var.danceB)"
				},
				{
					"knight_right_foot.rx": "torad(45) + torad(45)*limb_speed-sin(age/20*pi)/4-(head_pitch/57.5)/3+if(is_riding,torad(45),0)",
					"knight_right_foot.ry": "torad(15)+(head_yaw/57.5)/2",
					"knight_right_foot.rz": "sin(age/60*pi-torad(90))/10",
					"knight_left_foot.rx": "torad(45) + -torad(45)*limb_speed-sin(age/20*pi)/4-(head_pitch/567.5)/3+if(is_riding,torad(45),0)",
					"knight_left_foot.ry": "torad(-15)+(head_yaw/57.5)/2",
					"knight_left_foot.rz": "sin(age/60*pi-torad(90))/10"
				},
				{
					"var.y": "var.y2",
					"var.y2": "var.y3",
					"var.y3": "var.y4",
					"var.y4": "var.y5",
					"var.y5": "var.y6",
					"var.y6": "pos_y"
				}
			]
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, -6, 0],
			"submodels": [
				{
					"id": "head2",
					"invertAxis": "xy",
					"translate": [0, 1, 0],
					"submodels": [
						{
							"id": "left_eye",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [-1, 3.5, -3.9],
							"boxes": [
								{
									"coordinates": [-1, -1, 0, 1, 2, 0.05],
									"uvNorth": [1, 17, 2, 19],
									"uvEast": [1, 17, 1.05, 19],
									"uvSouth": [2, 17, 1, 19],
									"uvWest": [1.95, 17, 2, 19],
									"uvUp": [2, 17, 1, 17.05],
									"uvDown": [2, 19, 1, 18.95]
								}
							]
						},
						{
							"id": "right_eye",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [1, 3.5, -3.9],
							"boxes": [
								{
									"coordinates": [0, -1, 0, 1, 2, 0.05],
									"uvNorth": [4, 17, 5, 19],
									"uvEast": [4, 17, 4.05, 19],
									"uvSouth": [5, 17, 4, 19],
									"uvWest": [4.95, 17, 5, 19],
									"uvUp": [5, 17, 4, 17.05],
									"uvDown": [5, 19, 4, 18.95]
								}
							]
						},
						{
							"id": "eyes",
							"invertAxis": "xy",
							"translate": [0, 2.9, -3.9],
							"boxes": [
								{
									"coordinates": [-2.125, -0.1, 0, 4.25, 1.2, 0],
									"uvNorth": [25, 1, 32, 3]
								}
							]
						},
						{
							"id": "knight",
							"invertAxis": "xy",
							"translate": [0, 5, 0],
							"boxes": [
								{
									"coordinates": [-4, -5.5, -4, 8, 8, 8],
									"uvNorth": [8, 8, 16, 16],
									"uvEast": [0, 8, 8, 16],
									"uvSouth": [24, 8, 32, 16],
									"uvWest": [16, 8, 24, 16],
									"uvUp": [16, 8, 8, 0],
									"uvDown": [24, 0, 16, 8],
									"sizeAdd": -0.2
								},
								{
									"coordinates": [-4, -5.5, -4, 8, 8, 8],
									"uvNorth": [8, 24, 16, 32],
									"uvEast": [0, 24, 8, 32],
									"uvSouth": [24, 24, 32, 32],
									"uvWest": [16, 24, 24, 32],
									"uvUp": [16, 24, 8, 16],
									"uvDown": [24, 16, 16, 24],
									"sizeAdd": 0.05
								},
								{
									"coordinates": [-4, -5.5, -4, 8, 8, 8],
									"uvNorth": [8, 24, 16, 32],
									"uvEast": [0, 24, 8, 32],
									"uvSouth": [24, 24, 32, 32],
									"uvWest": [16, 24, 24, 32],
									"uvUp": [16, 24, 8, 16],
									"uvDown": [24, 16, 16, 24],
									"sizeAdd": 0.05
								},
								{
									"coordinates": [-4, 2.5, -4, 8, 1, 1],
									"uvNorth": [1, 43, 9, 44],
									"uvEast": [0, 43, 1, 44],
									"uvSouth": [10, 43, 18, 44],
									"uvWest": [9, 43, 10, 44],
									"uvUp": [9, 43, 1, 42],
									"uvDown": [17, 42, 9, 43],
									"sizeAdd": 0.05
								}
							],
							"submodels": [
								{
									"id": "knight_wing_right",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [1, -3, 4],
									"submodels": [
										{
											"id": "knight_wing_right2",
											"invertAxis": "xy",
											"mirrorTexture": "u",
											"translate": [0, 3, 0],
											"boxes": [
												{"coordinates": [0, -3.5, -0.2, 14, 9, 0], "textureOffset": [32, 7]},
												{"coordinates": [1, 5.5, -0.2, 14, 3, 0], "textureOffset": [32, 7]},
												{"coordinates": [3, -7.5, -0.2, 7, 4, 0], "textureOffset": [36, 16]}
											]
										}
									]
								},
								{
									"id": "knight_wing_left",
									"invertAxis": "xy",
									"translate": [-1, -3, 4],
									"submodels": [
										{
											"id": "knight_wing_left2",
											"invertAxis": "xy",
											"translate": [0, 0, 0],
											"boxes": [
												{"coordinates": [-14, -0.5, -0.2, 14, 9, 0], "textureOffset": [32, 7]},
												{"coordinates": [-15, 8.5, -0.2, 14, 3, 0], "textureOffset": [32, 7]},
												{"coordinates": [-10, -4.5, -0.2, 7, 4, 0], "textureOffset": [36, 16]}
											]
										}
									]
								},
								{
									"id": "knight_right_foot",
									"invertAxis": "xy",
									"translate": [2.5, -5, 1],
									"rotate": [-45, -25, 0],
									"boxes": [
										{
											"coordinates": [-1.5, -1, -4, 3, 2, 4],
											"uvNorth": [20, 36, 23, 38],
											"uvEast": [16, 36, 20, 38],
											"uvSouth": [27, 36, 30, 38],
											"uvWest": [23, 36, 27, 38],
											"uvUp": [23, 36, 20, 32],
											"uvDown": [26, 32, 23, 36]
										}
									]
								},
								{
									"id": "knight_left_foot",
									"invertAxis": "xy",
									"translate": [-2.5, -5, 1],
									"rotate": [-45, 25, 0],
									"boxes": [
										{
											"coordinates": [-1.5, -1, -4, 3, 2, 4],
											"uvNorth": [20, 36, 23, 38],
											"uvEast": [16, 36, 20, 38],
											"uvSouth": [27, 36, 30, 38],
											"uvWest": [23, 36, 27, 38],
											"uvUp": [23, 36, 20, 32],
											"uvDown": [26, 32, 23, 36]
										}
									]
								},
								{
									"id": "right_arm2",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [3, 0, 0],
									"rotate": [5, -5, 15],
									"boxes": [
										{
											"coordinates": [0, -5.2, -2, 4, 6, 4],
											"uvNorth": [8, 36, 4, 42],
											"uvEast": [12, 36, 8, 42],
											"uvSouth": [16, 36, 12, 42],
											"uvWest": [4, 36, 0, 42],
											"uvUp": [4, 36, 8, 32],
											"uvDown": [8, 32, 12, 36],
											"sizeAdd": -0.2
										}
									],
									"submodels": [
										{
											"id": "meta_knight_sub_7",
											"invertAxis": "xy",
											"translate": [0, 0, 0],
											"boxes": [
												{
													"coordinates": [0, -3.2, -2, 4, 4, 4],
													"uvNorth": [28, 20, 32, 24],
													"uvEast": [24, 20, 28, 24],
													"uvSouth": [36, 20, 40, 24],
													"uvWest": [32, 20, 36, 24],
													"uvUp": [32, 20, 28, 16],
													"uvDown": [36, 16, 32, 20]
												}
											]
										}
									]
								},
								{
									"id": "left_arm2",
									"invertAxis": "xy",
									"translate": [-3, 0, 0],
									"rotate": [5, 5, -15],
									"boxes": [
										{
											"coordinates": [-4, -5.2, -2, 4, 6, 4],
											"uvNorth": [8, 36, 4, 42],
											"uvEast": [12, 36, 8, 42],
											"uvSouth": [16, 36, 12, 42],
											"uvWest": [4, 36, 0, 42],
											"uvUp": [4, 36, 8, 32],
											"uvDown": [8, 32, 12, 36],
											"sizeAdd": -0.2
										}
									],
									"submodels": [
										{
											"id": "meta_knight_sub_9",
											"invertAxis": "xy",
											"mirrorTexture": "u",
											"translate": [0, 0, 0],
											"boxes": [
												{
													"coordinates": [-4, -3.2, -2, 4, 4, 4],
													"uvNorth": [28, 20, 32, 24],
													"uvEast": [24, 20, 28, 24],
													"uvSouth": [36, 20, 40, 24],
													"uvWest": [32, 20, 36, 24],
													"uvUp": [32, 20, 28, 16],
													"uvDown": [36, 16, 32, 20]
												}
											]
										}
									]
								},
								{
									"id": "morpho_knight_horn_right",
									"invertAxis": "xy",
									"translate": [2.5, 0.5, -4],
									"rotate": [0, 15, -10],
									"boxes": [
										{
											"coordinates": [-0.25, 0, -1, 0, 7, 4],
											"uvNorth": [4, 44, 4, 51],
											"uvEast": [0, 44, 4, 51],
											"uvSouth": [8, 44, 8, 51],
											"uvWest": [4, 44, 8, 51],
											"uvUp": [4, 44, 4, 40],
											"uvDown": [4, 40, 4, 44]
										}
									]
								},
								{
									"id": "morpho_knight_horn_left",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [-2.5, 0.5, -4],
									"rotate": [0, -15, 10],
									"boxes": [
										{
											"coordinates": [0.25, 0, -1, 0, 7, 4],
											"uvNorth": [4, 44, 4, 51],
											"uvEast": [8, 44, 4, 51],
											"uvSouth": [8, 44, 8, 51],
											"uvWest": [4, 44, 0, 51],
											"uvUp": [4, 44, 4, 40],
											"uvDown": [4, 40, 4, 44]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"part": "right_arm",
			"id": "right_arm",
			"invertAxis": "xy",
			"translate": [-1.75, -5.5, 0]
		},
		{
			"part": "left_arm",
			"id": "left_arm",
			"invertAxis": "xy",
			"translate": [1.75, -5.5, 0]
		},
		{
			"part": "left_wing",
			"id": "left_wing",
			"invertAxis": "xy",
			"translate": [0.5, -6, -1]
		},
		{
			"part": "right_wing",
			"id": "right_wing",
			"invertAxis": "xy",
			"translate": [-0.5, -6, -1]
		}
	]
}