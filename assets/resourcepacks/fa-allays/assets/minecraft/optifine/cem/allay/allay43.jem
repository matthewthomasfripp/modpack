{
	"credit": "Made with Blockbench",
	"texture": "optifine/random/entity/allay/pikmin_glow_pikmin.png",
	"textureSize": [128, 128],
	"models": [
		{
			"part": "head",
			"id": "head",
			"invertAxis": "xy",
			"translate": [0, -6, 0],
			"submodels": [
				{
					"id": "Created_by_FreshLX_for_Fresh_Animations",
					"invertAxis": "xy",
					"translate": [0, 0, 0]
				}
			],
			"animations": [
				{
					"var.testing": "0",
					"var.r": "random(id)*pi*4",
					"var.b": "var.r+age/27*pi",
					"var.c": "age*8*(pi/180)",
					"var.hurt": "-sin(hurt_time/2)*hurt_time/10",
					"var.wings": "var.r+limb_swing*1.5+age/5*pi +pos_y*1.5",
					"var.hold": "(0.5-0.5*cos( clamp(-right_arm.rx, 0, 1)*pi ))",
					"var.danceA": "clamp(if(head.rz!=0 || between(sin(var.r+age/260), -0.15, 0.15)                                                                                         , min(20, var.danceA +0.03 *frame_time*20), max(0, var.danceA -0.03 *frame_time*20)), 0, 1)",
					"var.danceB": "clamp(if(head.rz!=0 || between(sin(var.r+age/260), -0.15, 0.15) || !between(torad(head_pitch), torad(-5), torad(5)) && between(sin(var.r+age/100), 0, 1), min(20, var.danceB +0.5  *frame_time*20), max(0, var.danceB -0.5  *frame_time*20)), 0, 1)"
				},
				{
					"head2.rx": "torad(head_pitch)/2 -sin(var.b-pi/2)/20 -torad(2.5) -torad(30)*limb_speed +torad( 30 +30*sin(limb_swing/1.5) )*var.hurt",
					"head2.ry": "torad(head_yaw)/1.6 +(-sin(       var.c +sin(var.c*2)/4 )*torad(34) )*var.danceA        +sin(limb_swing/2.5)  *var.hurt",
					"head2.rz": "-sin(var.b/3)/16    +(-sin(-pi/4 +var.c                 )*torad(14) )*var.danceA",
					"head2.ty": "-6.1 -limb_speed/2   *(1-0.8*var.danceA)*(1-var.hurt)                            +(-0.5 -sin(limb_swing/2)/2 )*var.hurt",
					"head2.tz": "     -limb_speed*1.1 *(1-0.8*var.danceA)*(1-var.hurt)",
					"body.rx": "torad(2.5) +torad(30)*limb_speed*(1-0.8*var.danceA)*(1-var.hurt) +sin(var.b-pi/2)/20 +torad(head_pitch)/4 +clamp( if(!is_riding && age>10, -(pos_y-var.y), 0), -pi/3, pi/4) +torad( -40 )*var.hurt",
					"body.ry": "torad(head_yaw)/5          +( sin(       var.c +sin(var.c*2)/4 )*torad(20) )  *var.danceA +torad( 20*cos(limb_swing/3) )*var.hurt",
					"body.rz": "      sin(var.b/3     )/16 +( sin(       var.c                 )*torad(20) )  *var.danceA      -( sin(limb_swing/2) )/22*var.hurt",
					"body.tx": "      sin(var.b/3-pi/2)/2  +(-cos(       var.c                 )*torad(16) )*8*var.danceA",
					"body.ty": "-4 +sin(var.b  -pi/2)*sin(var.b/2.5)*(1-var.danceA) +( sin(pi/6 +var.c*2 -cos(pi/6 +var.c*2)/3) )*3*var.danceA +18*var.testing",
					"body.tz": " -sin(var.r+age/100*pi)/4",
					"body2.rx": "    -sin(var.b       )/16",
					"body2.rz": "     sin(var.b/3-pi/2)/10*(1-var.danceA) +( -cos(var.c )*torad(6) )  *var.danceA",
					"body2.sy": "1   +sin(var.b*7.3   )/60 +cos(var.b*5.3)/60*0",
					"render.leash_offset_x": " ( body.tx -(cos(var.c)*16*(pi/180)))/16",
					"render.leash_offset_y": "-( body.ty + cos(age*9*(pi/180))*0.25*(1-min(limb_swing/0.3, 1)) -0.5 )/16",
					"render.leash_offset_z": "-( body.tz )/16"
				},
				{
					"right_arm.rx": "              (-sin(var.b    +torad(60) )/20 -body.rx                  +torad( 50)*limb_speed +if(is_riding, torad(-45), 0 ) +torad(head_yaw)/4 )*(1-var.hold)    +( -1         )*var.hold +torad( sin(limb_swing/1.7)*30 -30 )*var.hurt",
					"left_arm.rx": "               (-sin(var.b    +torad(60) )/20 -body.rx                  +torad( 50)*limb_speed +if(is_riding, torad(-45), 0 ) -torad(head_yaw)/4 )*(1-var.hold)    +( -1         )*var.hold +torad( sin(limb_swing/2  )*30 -30 )*var.hurt",
					"right_arm.ry": "  torad( 15) +( sin(var.b    +torad(60) )/20 -body.ry*(1-var.danceA*2) +torad(-10)*limb_speed                                                   )*(1-var.hold)    +( -torad( 5) )*var.hold",
					"left_arm.ry": "   torad(-15) +(-sin(var.b    +torad(60) )/20 -body.ry*(1-var.danceA*2) +torad( 10)*limb_speed                                                   )*(1-var.hold)    +(  torad( 5) )*var.hold",
					"right_arm.rz": "-(torad(-40) +(-sin(var.b +cos(var.b)/1.5)/6 -body.rz                  +torad(-10)*limb_speed                                                   )*(1-var.hold))/2 +( -torad(10) )*var.hold +( sin(-pi/4 +var.c )*torad(16) )*var.danceA",
					"left_arm.rz": " -(torad( 40) +( sin(var.b +cos(var.b)/1.5)/6 -body.rz                  +torad( 10)*limb_speed                                                   )*(1-var.hold))/2 +(  torad(10) )*var.hold +( sin(-pi/4 +var.c )*torad(16) )*var.danceA",
					"right_arm.tx": "-2  +body.tx*(var.testing)                            +(  0.15 )*var.hold",
					"left_arm.tx": "  2  +body.tx*(var.testing)                            +( -0.15 )*var.hold",
					"right_arm.ty": "0.6 +body.ty*(var.testing) -sin(var.b)/8*(1-var.hold) +(  0.5  )*var.hold +if(is_riding,  0.5, 0) +( sin(-pi/4 +var.c )*torad(16)/2 )  *var.danceA",
					"left_arm.ty": " 0.6 +body.ty*(var.testing) -sin(var.b)/8*(1-var.hold) +(  0.5  )*var.hold +if(is_riding,  0.5, 0) -( sin(-pi/4 +var.c )*torad(16)/2 )  *var.danceA",
					"right_arm.tz": "0.2                                                   +( -0.5  )*var.hold +if(is_riding, -0.5, 0) +(body.ry*2)*var.danceA",
					"left_arm.tz": " 0.2                                                   +( -0.5  )*var.hold +if(is_riding, -0.5, 0) -(body.ry*2)*var.danceA"
				},
				{
					"right_eye.sz": "if(between(player_pos_x-pos_x, -30, 30)&&between(player_pos_y-pos_y, -30, 30)&&between(player_pos_z-pos_z, -30, 30), 1, 2)",
					"left_eye.sz": "right_eye.sz",
					"right_eye.sx": "1 +clamp((1 -abs(sin(var.r+age/7)*6))*clamp(-32 +cos((var.r+age/7)/1.5)*40 +cos((var.r+age/7)/4)*40, 0, 1), 0, 1)/2*(1-var.danceB)",
					"left_eye.sx": "right_eye.sx",
					"right_eye.sy": "1 -clamp(1.5 -abs(sin(var.r+age/7)*6), 0, 1)*clamp(-32 +cos((var.r+age/7)/1.5)*40 +cos((var.r+age/7)/4)*40, 0, 0.9)*(1-var.danceB)",
					"left_eye.sy": "right_eye.sy",
					"right_eye.tx": "2 +clamp( sin(var.r+age/4)/5, -0.1, 0.1)/2*clamp(-28 -cos(var.r+age/85)*30, 0, 1)*clamp(118 -sin(var.r+age/147)*120, 0, 1) +clamp(-torad(head_yaw)/8, -0.2, 0.2 )",
					"left_eye.tx": "  -2 +clamp( sin(var.r+age/4)/5, -0.1, 0.1)/2*clamp(-28 -cos(var.r+age/85)*30, 0, 1)*clamp(118 -sin(var.r+age/147)*120, 0, 1) +clamp(-torad(head_yaw)/8, -0.2, 0.2 )",
					"right_eye.ty": "-2.2 +(-clamp(-8 +sin(var.r +age/47)*40, 0, 0.7) )/2.5*var.danceB",
					"left_eye.ty": "right_eye.ty",
					"right_eye.tz": "-2.5 +if( right_eye.sy<=0.31, 0.2, 0 )*var.danceB",
					"left_eye.tz": "right_eye.tz",
					"eyes.tz": "-2.5 +if( right_eye.sy>0.31, 0.2, 0 )*var.danceB +0.2*(1-var.danceB)"
				},
				{
					"var.y": "var.y2",
					"var.y2": "var.y3",
					"var.y3": "var.y4",
					"var.y4": "var.y5",
					"var.y5": "var.y6",
					"var.y6": "pos_y"
				}
			]
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, -6, 0],
			"boxes": [
				{
					"coordinates": [-1.5, 3, -1, 3, 3, 2],
					"uvNorth": [8, 48, 20, 60],
					"uvEast": [0, 48, 8, 60],
					"uvSouth": [28, 48, 40, 60],
					"uvWest": [20, 48, 28, 60],
					"uvUp": [20, 48, 8, 40],
					"uvDown": [32, 40, 20, 48]
				}
			],
			"submodels": [
				{
					"id": "body2",
					"invertAxis": "xy",
					"translate": [0, 4, 0],
					"boxes": [
						{
							"coordinates": [-1.5, -3, -1, 3, 5, 2],
							"uvNorth": [8, 72, 20, 92],
							"uvEast": [0, 72, 8, 92],
							"uvSouth": [28, 72, 40, 92],
							"uvWest": [20, 72, 28, 92],
							"uvUp": [20, 72, 8, 64],
							"uvDown": [32, 64, 20, 72],
							"sizeAdd": -0.2
						}
					]
				},
				{
					"id": "head2",
					"invertAxis": "xy",
					"translate": [0, 6, 0],
					"boxes": [
						{
							"coordinates": [-2.5, 0, -2.5, 5, 5, 5],
							"uvNorth": [20, 20, 40, 40],
							"uvEast": [0, 20, 20, 40],
							"uvSouth": [60, 20, 80, 40],
							"uvWest": [40, 20, 60, 40],
							"uvUp": [40, 20, 20, 0],
							"uvDown": [60, 0, 40, 20]
						}
					],
					"submodels": [
						{
							"id": "left_eye",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [-1, 1.25, -2.5],
							"boxes": [
								{
									"coordinates": [-1.5, -0.25, -0.05, 2, 2, 0.05],
									"uvNorth": [72, 44, 80, 52],
									"uvEast": [72, 44, 73, 52],
									"uvSouth": [80, 44, 72, 52],
									"uvWest": [79, 44, 80, 52],
									"uvUp": [80, 44, 72, 49],
									"uvDown": [80, 52, 72, 47]
								}
							]
						},
						{
							"id": "right_eye",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [1, 1.25, -2.5],
							"boxes": [
								{
									"coordinates": [-0.5, -0.25, -0.05, 2, 2, 0.05],
									"uvNorth": [60, 44, 68, 52],
									"uvEast": [60, 44, 61, 52],
									"uvSouth": [68, 44, 60, 52],
									"uvWest": [67, 44, 68, 52],
									"uvUp": [68, 44, 60, 49],
									"uvDown": [68, 52, 60, 47]
								}
							]
						},
						{
							"id": "eyes",
							"invertAxis": "xy",
							"translate": [0, 1.9, -2.5]
						},
						{
							"id": "head_part",
							"invertAxis": "xy",
							"translate": [0, 0, 0],
							"submodels": [
								{
									"id": "stem",
									"invertAxis": "xy",
									"translate": [0, 5, 0],
									"rotate": [37.5, 0, 0],
									"boxes": [
										{
											"coordinates": [-0.5, 0, 0, 1, 5, 0],
											"uvNorth": [0, 0, 4, 20],
											"uvEast": [0, 0, 0, 20],
											"uvSouth": [4, 0, 8, 20],
											"uvWest": [4, 0, 4, 20],
											"uvUp": [4, 0, 0, 0],
											"uvDown": [8, 0, 4, 0]
										}
									],
									"submodels": [
										{
											"id": "leaf",
											"invertAxis": "xy",
											"translate": [0, 5, 0],
											"rotate": [25, 0, 0],
											"boxes": [
												{
													"coordinates": [-1.5, 0, 0, 3, 4, 0],
													"uvNorth": [60, 4, 72, 20],
													"uvEast": [60, 4, 60, 20],
													"uvSouth": [72, 4, 84, 20],
													"uvWest": [72, 4, 72, 20],
													"uvUp": [72, 4, 60, 4],
													"uvDown": [84, 4, 72, 4]
												}
											]
										},
										{
											"id": "mushroom",
											"invertAxis": "xy",
											"translate": [1, 5, 0],
											"rotate": [25, 0, 0]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"part": "right_arm",
			"id": "right_arm",
			"invertAxis": "xy",
			"translate": [-1.75, -5.5, 0],
			"boxes": [
				{
					"coordinates": [1.5, 2, -1, 1, 4, 2],
					"uvNorth": [104, 8, 100, 24],
					"uvEast": [112, 8, 104, 24],
					"uvSouth": [116, 8, 112, 24],
					"uvWest": [100, 8, 92, 24],
					"uvUp": [100, 8, 104, 0],
					"uvDown": [104, 0, 108, 8]
				}
			]
		},
		{
			"part": "left_arm",
			"id": "left_arm",
			"invertAxis": "xy",
			"translate": [1.75, -5.5, 0],
			"boxes": [
				{
					"coordinates": [-2.5, 2, -1, 1, 4, 2],
					"uvNorth": [100, 8, 104, 24],
					"uvEast": [92, 8, 100, 24],
					"uvSouth": [112, 8, 116, 24],
					"uvWest": [104, 8, 112, 24],
					"uvUp": [104, 8, 100, 0],
					"uvDown": [108, 0, 104, 8]
				}
			]
		},
		{
			"part": "left_wing",
			"id": "left_wing",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "right_wing",
			"id": "right_wing",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		}
	]
}